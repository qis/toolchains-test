get_filename_component(VCPKG_INSTALL_DIR "${VCPKG_ROOT}/installed/${VCPKG_TARGET_TRIPLET}" ABSOLUTE)
set(VCPKG_INCLUDE_DIR "${VCPKG_INSTALL_DIR}/include")
set(VCPKG_LIB_DIR_DEBUG "${VCPKG_INSTALL_DIR}/debug/lib")
set(VCPKG_LIB_DIR_RELEASE "${VCPKG_INSTALL_DIR}/lib")

if(CMAKE_BUILD_TYPE MATCHES Debug)
  set(VCPKG_LIB_DIR "${VCPKG_LIB_DIR_DEBUG}")
else()
  set(VCPKG_LIB_DIR "${VCPKG_LIB_DIR_RELEASE}")
endif()

function(check_includes)
  foreach(path IN LISTS ARGN)
    get_filename_component(path "${path}" ABSOLUTE)
    if(NOT EXISTS "${path}")
      message(FATAL_ERROR "Missing include directory:\n  \"${path}\"\n")
    endif()
    string(FIND "${path}" "${VCPKG_INCLUDE_DIR}" path_found)
    if(NOT ${path_found} EQUAL 0)
      message(FATAL_ERROR "Invalid include directory:\n  \"${path}\"\n  \"${VCPKG_INCLUDE_DIR}\" (expected)\n")
    endif()
  endforeach()
endfunction()

function(check_libraries)
  foreach(path IN LISTS ARGN)
    get_filename_component(path "${path}" ABSOLUTE)
    if(NOT EXISTS "${path}")
      message(FATAL_ERROR "Missing library file:\n  \"${path}\"\n")
    endif()
    get_filename_component(path "${path}" DIRECTORY)
    if(NOT "${path}" STREQUAL "${VCPKG_LIB_DIR}")
      message(FATAL_ERROR "Invalid library directory:\n  \"${path}\"\n  \"${VCPKG_LIB_DIR}\" (expected)\n")
    endif()
  endforeach()
endfunction()

function(check_targets)
  foreach(target IN LISTS ARGN)
    # Check if target exists.
    if(NOT TARGET "${target}")
      message(FATAL_ERROR "Missing target: ${target}")
    endif()

    # Check target include directories.
    get_target_property(target_includes "${target}" INTERFACE_INCLUDE_DIRECTORIES)
    if("${target_includes}")
      check_includes("${target_includes}")
    endif()

    # Check target type.
    get_target_property(target_type "${target}" TYPE)
    if("${target_type}" STREQUAL "INTERFACE_LIBRARY")
      return()
    endif()

    # Check target imported location.
    get_target_property(target_library "${target}" IMPORTED_LOCATION)
    if("${target_library}")
      check_libraries("${target_library}")
    endif()

    # Check target build type imported location.
    if(CMAKE_BUILD_TYPE MATCHES Debug)
      get_target_property(target_library_debug "${target}" IMPORTED_LOCATION_DEBUG)
      if("${target_library_debug}")
        check_libraries("${target_library_debug}")
      endif()
    else()
      get_target_property(target_library_release "${target}" IMPORTED_LOCATION_RELEASE)
      if("${target_library_release}")
        check_libraries("${target_library_release}")
      endif()
    endif()
  endforeach()
endfunction()
